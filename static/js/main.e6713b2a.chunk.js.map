{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/header/Header.styles.js","components/header/index.js","config.js","API.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Button/Button.styles.js","components/Button/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Home.js","hooks/useMovieFetch.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","components/NotFound.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMBDLogoImg","Header","to","src","RMBDLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","movieId","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","value","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersisterState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","button","Button","text","callback","type","onClick","Grid","header","children","image","Text","HeroImage","title","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","placeholder","onChange","event","currentTarget","Spinner","Image","Thumb","clickable","loading","Home","setLoading","error","setError","isLoadingMore","setIsLoadingMore","console","log","useCallback","API","movies","prev","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","release_date","split","poster_path","NoImage","id","useMovieFetch","credits","directors","crew","filter","i","job","actors","cast","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","useParams","runtime","actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6713b2a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from 'styled-components';\r\n\r\n\r\nexport const Wrapper = styled.div`\r\nbackground:var(--darkGrey);\r\npadding:0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:space-between;\r\nmax-width:var(--maxWidth);\r\npadding:20px 0;\r\nmargin: 0 auto;\r\n \r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\nwidth:200px;\r\n@media screen and (max-width:500px){\r\n  width:150px;\r\n  }\r\n`;\r\n\r\nexport const TMBDLogoImg = styled.img`\r\nwidth:100px;\r\n@media screen and (max-width:500px){\r\n  width:80px;\r\n}\r\n`;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport RMBDLogo from '../../images/react-movie-logo.svg';\r\nimport TMDBLogo from '../../images/tmdb_logo.svg';\r\n\r\nimport { Wrapper, Content, LogoImg, TMBDLogoImg } from \"./Header.styles\";\r\n\r\nconst Header = () => (\r\n  <Wrapper>\r\n    <Content>\r\n      <Link to='/'>\r\n        <LogoImg src={RMBDLogo} alt='rmdb-logo' />\r\n      </Link>\r\n\r\n      <TMBDLogoImg src={TMDBLogo} alt='tmbd-logo' />\r\n    </Content>\r\n  </Wrapper>\r\n);\r\nexport default Header;","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w342';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\nexport const isPersisterState = stateName => {\n  const sessionState = sessionStorage.getItem(stateName)\n  return sessionState && JSON.parse(sessionState)\n}\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport API from \"../API\";\r\n\r\n//helpers\r\nimport { isPersisterState } from \"../helpers\";\r\nconst initialState = {\r\n  page: 0,\r\n  results: [],\r\n  total_pages: 0,\r\n  total_results: 0\r\n}\r\n\r\nexport const useHomeFetch = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [state, setState] = useState(initialState);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\r\n  console.log(searchTerm);\r\n\r\n  const fetchMovies = useCallback(async (page, searchTerm = '') => {\r\n    try {\r\n      setError(false);\r\n      setLoading(true);\r\n\r\n      const movies = await API.fetchMovies(searchTerm, page);\r\n      setState(prev => {\r\n        return {\r\n          ...movies,\r\n          results:\r\n            page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\r\n        }\r\n      });\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n    setLoading(false);\r\n  }, [])\r\n\r\n  //search and initial render\r\n  useEffect(() => {\r\n\r\n    if (!searchTerm) {\r\n      const sessionState = isPersisterState('homeState')\r\n      if (sessionState) {\r\n        setState(sessionState)\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n    setState(initialState)\r\n    fetchMovies(1, searchTerm)\r\n  }, [searchTerm, fetchMovies]);\r\n\r\n  //load more\r\n  useEffect(() => {\r\n    if (!isLoadingMore) return;\r\n    console.log('reloading started for more movies');\r\n    fetchMovies(state.page + 1, searchTerm);\r\n    setIsLoadingMore(false);\r\n\r\n  }, [isLoadingMore, searchTerm, state.page, fetchMovies]);\r\n\r\n  //write to sessionStorage\r\n  useEffect(() => {\r\n    if (!searchTerm) sessionStorage.setItem('homeState', JSON.stringify(state))\r\n  }, [searchTerm, state])\r\n\r\n\r\n  return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore };\r\n}","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.button`\r\ndisplay: block;\r\nbackground-color: var(--darkGrey);\r\ncolor: var(--white);\r\nwidth: 25%;\r\nheight: 60px;\r\nborder-radius: 30px;\r\nborder: 0;\r\nfont-size: var(--fontBig);\r\nmargin: 20px auto;\r\ntransition: all 0.3s;\r\noutline: none;\r\ncursor: pointer;\r\n\r\n:hover{\r\n  opacity: 0.8s;\r\n}\r\n`;","import React from \"react\";\r\n\r\n//styles\r\nimport { Wrapper } from \"./Button.styles\";\r\n\r\nexport const Button = ({ text, callback }) => (\r\n  <Wrapper type='button' onClick={callback}>\r\n    {text}\r\n  </Wrapper>\r\n)","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\nmax-width:var(--maxWidth);\r\nmargin: 0 auto;\r\npadding: 0 20px;\r\n\r\nh1{\r\n  color: var(--medGrey);\r\n\r\n  @media screen and (max-width:768px){\r\n    font-size: var(--fontBig);\r\n  }\r\n}\r\n`;\r\nexport const Content = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\ngrid-gap: 2rem;\r\n\r\n`;","import React from \"react\";\r\n\r\n//styles\r\nimport { Wrapper, Content } from \"./Grid.styles\";\r\n\r\nconst Grid = ({ header, children }) => {\r\n  return (\r\n    <Wrapper>\r\n      <h1>{header}</h1>\r\n      <Content>\r\n        {children}\r\n      </Content>\r\n    </Wrapper>\r\n  )\r\n}\r\nexport default Grid;","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\nbackground-color: var(--darkGrey);\r\nbackground-position: center;\r\nbackground-size: cover;\r\nbackground-repeat: no-repeat;\r\nbackground-image:linear-gradient(\r\n  to bottom, rgba(0,0,0,0)\r\n  41%, rgba(0,0,0,0.65)\r\n  100%\r\n), url(${({ image }) => image});\r\n\r\n  \r\n  height: 600px;\r\n  position: relative;\r\n  animation: animateHeroImage 1s;\r\n\r\n  @keyframes animateHeroImage{\r\n    from{\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\nexport const Content = styled.div`\r\npadding:  20px;\r\nmax-width: var(--maxWidth);\r\nmargin: 0 auto;\r\n`;\r\nexport const Text = styled.div`\r\nz-index: 100;\r\nmax-width: 700px;\r\nposition: absolute;\r\nbottom: 40px;\r\nmargin-right: 20px;\r\nmin-height: 100px;\r\ncolor: var(--white);\r\n\r\nh1{\r\n  font-size: var(--fontSuperBig);\r\n\r\n  @media screen and (max-width: 720px){\r\n    font-size: var(--fontBig);\r\n  }\r\n}\r\n\r\np{\r\n  font-size: var(--fontMed);\r\n  @media screen and (max-width: 720px){\r\n    font-size: var(--fontSmall);\r\n  }\r\n}\r\n\r\n@media screen and (max-width:720){\r\n  max-width: 100%;\r\n}\r\n`;","import React from \"react\";\r\n\r\n//styles\r\nimport { Wrapper, Content, Text } from \"./HeroImage.styles\";\r\n\r\nconst HeroImage = ({ image, title, text }) => (\r\n  <Wrapper image={image}>\r\n    <Content>\r\n      <Text>\r\n        <h1>{title}</h1>\r\n        <p>{text}</p>\r\n      </Text>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nexport default HeroImage;","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from 'styled-components'\r\n\r\nexport const Wrapper = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nheight: 100px;\r\nbackground-color: var(--darkGrey);\r\npadding: 0 20px;\r\n`;\r\nexport const Content = styled.div`\r\nposition: relative;\r\nmax-width: var(--maxWidth);\r\nwidth: 100%;\r\nheight: 55px;\r\nbackground-color: var(--medGrey);\r\nmargin: 0 auto;\r\nborder-radius: 40px;\r\ncolor: var(--white);\r\n\r\nimg{\r\n  position: absolute;\r\n  left: 15px;\r\n  top: 14px;\r\n  width: 30px;\r\n}\r\ninput{\r\n  font-size: var(--fontBig);\r\n  position: absolute;\r\n  left: 0;\r\n  margin: 8px 0;\r\n  padding: 0 0 0 60px;\r\n  border: 0;\r\n  width: 95%;\r\n  background-color: transparent;\r\n  height: 40px;\r\n  color: var(--white);\r\n  :focus{\r\n    outline: none;\r\n  }\r\n}\r\n`;","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\n//image\r\nimport searchIcon from '../../images/search-icon.svg';\r\n\r\n//styles\r\nimport { Wrapper, Content } from \"./SearchBar.styles\";\r\n\r\nconst SearchBar = ({ setSearchTerm }) => {\r\n  const [state, setState] = useState('');\r\n\r\n  const initial = useRef(true);\r\n\r\n  useEffect(() => {\r\n\r\n    if (initial.current) { initial.current = false; return }\r\n    const timer = setTimeout(() => {\r\n      setSearchTerm(state);\r\n    }, 750)\r\n    return () => clearTimeout(timer)\r\n  }, [setSearchTerm, state]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <img src={searchIcon} alt='search-icon'></img>\r\n        <input\r\n          type='text'\r\n          placeholder='Search Movie'\r\n          onChange={event => setState(event.currentTarget.value)}\r\n          value={state}\r\n        />\r\n      </Content>\r\n    </Wrapper>\r\n  )\r\n}\r\nexport default SearchBar;","import { Spinner } from \"./Spinner.styles\";\r\n\r\nexport default Spinner;","import styled from 'styled-components'\r\n\r\nexport const Spinner = styled.div`\r\nborder: 5px solid var(--darkGrey);\r\nborder-top: 5px solid grey;\r\nborder-radius: 50%;\r\nwidth: 50px;\r\nheight: 50px;\r\nanimation:  spin 0.8s linear infinite;\r\nmargin: 20px auto;\r\n\r\n@keyframes spin {\r\n  0%{\r\n    transform:  rotate(0deg);\r\n  }\r\n  100%{\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n`","import styled from 'styled-components';\r\n\r\nexport const Image = styled.img`\r\nwidth: 100%;\r\nmax-width: 720px;\r\ntransition:  all 0.3s;\r\nobject-fit: cover;\r\nborder-radius: 20px;\r\nanimation: animateThumb 0.5s;\r\n\r\n:hover{\r\n  opacity: 0.8;\r\n}\r\n\r\n@keyframes animateThumb {\r\n  from{\r\n    opacity: 0;\r\n  }\r\n  to{\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n`;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//styles\r\nimport { Image } from './Thumb.styles';\r\n\r\nconst Thumb = ({ image, movieId, clickable, title }) => (\r\n\r\n  <div title={title}>\r\n    {clickable ? (\r\n      <Link to={`/${movieId}`}>\r\n        <Image loading='lazy' src={image} alt={title} />\r\n      </Link>\r\n    ) : (\r\n      <Image loading='lazy' src={image} alt={title} />\r\n    )}\r\n\r\n  </div>\r\n\r\n\r\n\r\n);\r\nexport default Thumb;","import React, { } from \"react\";\r\n\r\n//config\r\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config';\r\n\r\n//componenets\r\n\r\n//hook\r\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\r\n\r\n//image\r\nimport NoImage from '../images/no_image.jpg';\r\nimport { Button } from \"./Button\";\r\nimport Grid from \"./Grid\";\r\nimport HeroImage from \"./HeroImage\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Spinner from \"./Spinner\";\r\nimport Thumb from \"./Thumb\";\r\n\r\nconst Home = () => {\r\n\r\n  const { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore } = useHomeFetch();\r\n\r\n  if (error) return <div>Soemthing went wrong...</div>\r\n  return (\r\n    <>\r\n      {state.results[0] && !searchTerm ?\r\n        <HeroImage\r\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n          title={state.results[0].original_title}\r\n          text={state.results[0].overview}\r\n        />\r\n        : null}\r\n      <SearchBar setSearchTerm={setSearchTerm} />\r\n      <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\r\n        {state.results.map(movie => (\r\n          <Thumb key={movie.id}\r\n            clickable\r\n            title={`${movie.title} (${movie.release_date?.split('-')[0]})`}\r\n            image={movie.poster_path ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path : NoImage}\r\n            movieId={movie.id} />\r\n        ))}\r\n      </Grid>\r\n      {loading && <Spinner />}\r\n      {state.page < state.total_pages && !loading && (\r\n        <Button callback={() => setIsLoadingMore(true)} text='Load More' />\r\n      )}\r\n    </>\r\n  )\r\n}\r\nexport default Home;","import { useState, useEffect, useCallback } from 'react';\r\nimport API from \"../API\";\r\nimport { isPersisterState } from '../helpers';\r\nconst useMovieFetch = (movieId) => {\r\n  const [state, setState] = useState({});\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(false);\r\n\r\n  const fetchMovie = useCallback(async () => {\r\n    try {\r\n      const movie = await API.fetchMovie(movieId)\r\n      const credits = await API.fetchCredits(movieId)\r\n      const directors = credits.crew.filter(i => i.job === 'Director');\r\n\r\n      setState({\r\n        ...movie,\r\n        actors: credits.cast,\r\n        directors\r\n      })\r\n      setLoading(false);\r\n    }\r\n    catch (e) {\r\n      console.log(e)\r\n      setError(true);\r\n    }\r\n  }, [movieId])\r\n\r\n  useEffect(() => {\r\n    const sessionState = isPersisterState(movieId);\r\n    if (sessionState) {\r\n      setState(sessionState);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    fetchMovie();\r\n\r\n  }, [movieId, fetchMovie,])\r\n\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem(movieId, JSON.stringify(state));\r\n  }, [movieId, state])\r\n\r\n  return { state, loading, error };\r\n}\r\nexport default useMovieFetch;","import styled from 'styled-components';\r\nexport const Wrapper = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nwidth: 100%;\r\nheight: 70px;\r\nbackground-color: var(--medGrey);\r\ncolor: var(--white);\r\n`;\r\n\r\nexport const Content = styled.div`\r\ndisplay: flex;\r\nwidth: 100%;\r\nmax-width: var(--maxWidth);\r\npadding: 0 20px;\r\n\r\nspan{\r\n  font-size: var(--fontMed);\r\n  color: var(--white);\r\n  padding-right: 10px;\r\n  @media screen and (max-width:768px){\r\n    font-size: var(--fontSmall);\r\n  }\r\n}\r\n`;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Content, Wrapper } from \"./BreadCrumb.styles\";\r\n\r\nconst BreadCrumb = ({ movieTitle }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <Link to='/'><span>Home</span></Link>\r\n        <span>|</span>\r\n        <span>{movieTitle}</span>\r\n      </Content>\r\n    </Wrapper>\r\n  )\r\n}\r\nexport default BreadCrumb;","import styled from \"styled-components\";\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\r\n\r\nexport const Wrapper = styled.div`\r\nbackground: ${({ backdrop }) =>\r\n    backdrop ?\r\n      `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})`\r\n      : '#000'\r\n  };\r\nbackground-size: cover;\r\nbackground-position: center;\r\npadding: 40px 20px;\r\nanimation: animateMovieInfo 1s;\r\n\r\n@keyframes animateMovieInfo {\r\n  from{\r\n    opacity: 0;\r\n  }\r\n  to{\r\n    opacity: 1; \r\n  }\r\n}\r\n`;\r\nexport const Content = styled.div`\r\ndisplay: flex;\r\nmax-width:var(--maxWidth);\r\nmargin: 0 auto;\r\nbackground-color: rgba(0,0,0,0.7);\r\nborder-radius: 20px;\r\n@media screen and (max-width:768px){\r\n  display: block;\r\n  max-height: none;\r\n}\r\n\r\n`;\r\nexport const Text = styled.div`\r\nwidth: 100%;\r\npadding: 20px 40px;\r\ncolor: var(--white);\r\noverflow: hidden;\r\n.rating-directors{\r\n  display: flex;\r\n  justify-content: flex-start;\r\n}\r\n.score{\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 35px;\r\n  height: 35px;\r\n  background-color: white;\r\n  color: #000;\r\n  font-weight: 800;\r\n  border-radius: 50%;\r\n  margin: 0;\r\n}\r\n.director{\r\n  margin: 0 0 0 40px;\r\n  p{\r\n    margin: 0;\r\n  }\r\n}\r\nh1{\r\n  @media screen and (max-width:768px){\r\n    font-size: var(--fontBig);\r\n  }\r\n}\r\n`;","import React from \"react\";\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\r\nimport { Content, Wrapper } from \"./MovieInfo.styles\";\r\nimport Thumb from '../Thumb';\r\nimport NoImage from '../../images/no_image.jpg'\r\nimport { Text } from './MovieInfo.styles'\r\nconst MovieInfo = ({ movie }) => {\r\n\r\n  return (\r\n    <Wrapper backdrop={movie.backdrop_path}>\r\n      <Content>\r\n        <Thumb\r\n          image={movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage}\r\n          clickable={false}\r\n          title='movie-thumb'\r\n        />\r\n        <Text>\r\n          <h1>{movie.title}</h1>\r\n          <h3>Plot</h3>\r\n          <p>{movie.overview}</p>\r\n\r\n          <div className=\"rating-directors\">\r\n            <div>\r\n              <h3>Rating</h3>\r\n              <div className=\"score\">{movie.vote_average}</div>\r\n            </div>\r\n            <div className=\"director\">\r\n              <h3>Director{movie.directors.length > 1 ? 's' : ''}</h3>\r\n              {movie.directors.map(director => (\r\n                <p key={director.credit_id}>\r\n                  {director.name}\r\n                </p>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </Text>\r\n\r\n      </Content>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default MovieInfo;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nmin-height: 100px;\r\nbackground-color: var(--darkGrey);\r\npadding: 0 20px;\r\n`;\r\nexport const Content = styled.div`\r\ndisplay: flex;\r\nmax-width: var(--maxWidth);\r\nwidth: 100%;\r\nmargin: 0 auto;\r\n\r\n.column{\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: var(--medGrey);\r\n  border-radius: 20px;\r\n  margin: 0 20px;\r\n  flex:1;\r\n\r\n  :first-child{\r\n  margin-right: 0;\r\n  }\r\n}\r\n\r\n@media screen and (max-width:768px){\r\n  display: block;\r\n  .column{\r\n    margin: 20px 0;\r\n  }\r\n}\r\n\r\n`;\r\n","import React from \"react\";\r\n\r\n//helpers\r\nimport { calcTime, convertMoney } from '../../helpers'\r\nimport { Content, Wrapper } from \"./MovieInfoBar.styles\";\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <div className=\"column\">\r\n          <p>Running Time: {calcTime(time)}</p>\r\n        </div>\r\n        <div className=\"column\">\r\n          <p>Budget: {convertMoney(budget)}</p>\r\n        </div>\r\n        <div className=\"column\">\r\n          <p>Revenue: {convertMoney(revenue)}</p>\r\n        </div>\r\n      </Content>\r\n    </Wrapper>\r\n  )\r\n}\r\nexport default MovieInfoBar","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\ncolor: var(--white);\r\nbackground-color: var(--darkGrey);\r\nborder-radius: 20px;\r\npadding: 5px;\r\ntext-align: center;\r\nh3{\r\n  margin: 10px 0 0 0 ;\r\n}\r\np{\r\n  margin: 5px 0;\r\n}\r\n`;\r\nexport const Image = styled.img`\r\ndisplay: block;\r\nwidth: 100%;\r\nheight: 200px;\r\nobject-fit: cover;\r\nborder-radius: 15px;\r\n`;","import React from 'react';\r\nimport { Wrapper, Image } from './Actor.styles'\r\nconst Actor = ({ name, character, imageUrl }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Image loading='lazy' src={imageUrl} alt='actor-thumb' />\r\n      <h3>{name}</h3>\r\n      <p>{character}</p>\r\n    </Wrapper>\r\n  )\r\n}\r\nexport default Actor;","import React, { } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useMovieFetch from \"../hooks/useMovieFetch\";\r\nimport Spinner from './Spinner/index'\r\nimport BreadCrumb from './BreadCrumb';\r\nimport MovieInfo from \"./MovieInfo\";\r\nimport MovieInfoBar from \"./MovieInfoBar\";\r\nimport Actor from \"./Actor\";\r\nimport Grid from './Grid'\r\nimport NoImage from '../images/no_image.jpg'\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\r\nconst Movie = () => {\r\n\r\n  const { movieId } = useParams();\r\n  const { error, loading, state: movie } = useMovieFetch(movieId);\r\n  console.log(movie)\r\n  if (loading) return <Spinner />\r\n  if (error) return <div>Something went wrong</div>\r\n  return (\r\n    <>\r\n      <BreadCrumb movieTitle={`${movie.original_title} (${movie.release_date?.split('-')[0]})`} />\r\n\r\n      <MovieInfo movie={movie} />\r\n      <MovieInfoBar time={movie.runtime} budget={movie.budget} revenue={movie.revenue} />\r\n      <Grid header='Actors'>\r\n        {movie.actors.map(actor => (\r\n          <Actor key={actor.credit_id}\r\n            name={actor.name}\r\n            character={actor.character}\r\n            imageUrl={\r\n              actor.profile_path\r\n                ?\r\n                `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                : NoImage\r\n            }\r\n          />\r\n        ))}\r\n      </Grid>\r\n\r\n    </>\r\n  )\r\n}\r\nexport default Movie;","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      Not Found\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound;","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n :root{\r\n  --maxWidth:1280px;\r\n  --white:#fff;\r\n  --lightGrey:#eee;\r\n  --medGrey:#4d4d4d;\r\n  --darkGrey:#353535;\r\n  --fontSuperBig:2.5rem;\r\n  --fontBig:1.5rem;\r\n  --fontMed:1.2rem;\r\n  --fontSmall:1rem;\r\n}\r\n* {\r\n  box-sizing:border-box;\r\n  font-family:'Abel',sans-serif;\r\n}\r\n\r\nbody{\r\n  margin:0;\r\n  padding:0;\r\n\r\n  h1{\r\n    font-size:2rem;\r\n    font-weight:600;\r\n    color:var(--white);\r\n  }\r\n  h3{\r\n    font-size:1.1rem;\r\n    font-weight:600;\r\n  }\r\n  p{\r\n    font-size:1rem;\r\n    color:var(--white);\r\n  }\r\n}\r\n`","import React from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\n//components\nimport Header from './components/header';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport NotFound from './components/NotFound';\n\n//styles\nimport { GlobalStyle } from './GlobalStyle';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Header />\n      <Routes>\n        <Route path='/' element={<Home />} />\n        <Route path='/:movieId' element={<Movie />} />\n        <Route path='/*' element={<NotFound />} />\n      </Routes>\n      <GlobalStyle />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}